{"version":3,"sources":["webpack:///./src/components/navbar.js","webpack:///./src/components/navbar.module.scss","webpack:///./src/components/settingsContainer.js","webpack:///./src/pages/settings.js"],"names":["navbar","className","styles","headerContainer","navContainer","ulContainer","to","module","exports","SettingsContainer","inputMinHeartRateVal","useRef","inputMaxHeartRateVal","db","useEffect","request","indexedDB","open","onupgradeneeded","e","current","target","result","console","log","createObjectStore","keyPath","autoIncrement","onsuccess","req","transaction","objectStore","get","heartRateObject","undefined","addData","value","minHeartRate","maxHeartRate","onerror","errorCode","store","add","reqVals","data","type","min","max","ref","onClick","objectStoreTitleRequest","parseInt","put","settings"],"mappings":"2FAAA,0DAmBeA,IAdA,WACX,OACI,4BAAQC,UAAWC,IAAOC,iBACtB,yBAAKF,UAAWC,IAAOE,cACnB,wBAAIH,UAAWC,IAAOG,aAClB,4BAAI,kBAAC,OAAD,CAAMC,GAAG,KAAT,SACJ,4BAAI,kBAAC,OAAD,CAAMA,GAAG,aAAT,kB,qBCVxBC,EAAOC,QAAU,CAAC,gBAAkB,wCAAwC,aAAe,qCAAqC,YAAc,sC,8EC8J/HC,EA3JW,WAEtB,IAAIC,EAAuBC,iBAAO,GAC9BC,EAAuBD,iBAAO,GAE9BE,EAAKF,iBAAO,MAEhBG,qBAAU,WAOV,IAAIC,EAAUC,UAAUC,KAAK,sBAAuB,GAEpDF,EAAQG,gBAAkB,SAAAC,GACtBN,EAAGO,QAAUD,EAAEE,OAAOC,OACtBC,QAAQC,IAAI,oBAAqBX,EAAGO,SACpCP,EAAGO,QAAQK,kBAAkB,kBAAmB,CAAEC,QAAS,KAAMC,eAAe,KAIpFZ,EAAQa,UAAY,SAAAT,GAChBN,EAAGO,QAAUD,EAAEE,OAAOC,OACtB,IAEIO,EAFKhB,EAAGO,QAAQU,YAAY,CAAC,mBAAoB,YACtCC,YAAY,mBACXC,IAAI,GAEpBT,QAAQC,IAAI,cACZK,EAAID,UAAY,SAAAT,GACZ,IAAIc,EAAkBd,EAAEE,OAAOC,YAERY,IAApBD,EACCE,KAEAzB,EAAqBU,QAAQgB,MAAQH,EAAgBI,aACrDzB,EAAqBQ,QAAQgB,MAAQH,EAAgBK,eAM7DT,EAAIU,QAAU,SAAApB,GACVI,QAAQC,IAAI,UAAWL,EAAEqB,aAOjCzB,EAAQwB,QAAU,SAAApB,GACdN,EAAGO,QAAUD,EAAEE,OAAOC,OACtBC,QAAQC,IAAI,QAASL,EAAEE,OAAOmB,YAGlC,IAAML,EAAU,WACZ,IACIM,EADK5B,EAAGO,QAAQU,YAAY,CAAC,mBAAoB,aACtCC,YAAY,mBAC3BU,EAAMC,IAAI,CAAEL,aAAc,IAAKC,aAAc,MAE7C,IAAIK,EAAUF,EAAMT,IAAI,GAExBW,EAAQf,UAAY,SAACT,GACjBI,QAAQC,IAAI,SAAUL,EAAEE,OAAOC,QAC/B,IAAIsB,EAAOzB,EAAEE,OAAOC,OACpBZ,EAAqBU,QAAQgB,MAAQQ,EAAKP,aAC1CzB,EAAqBQ,QAAQgB,MAAQQ,EAAKN,cAG9CK,EAAQJ,QAAU,SAAApB,GACdI,QAAQC,IAAI,UAAWL,EAAEqB,eAM9B,IA+DH,OACI,6BACI,2DACA,qCACA,2BAAOK,KAAK,SAASC,IAAK,GAAIC,IAAK,IAAOC,IAAKtC,IAC/C,qCACA,2BAAOmC,KAAK,SAASC,IAAK,GAAIC,IAAK,IAAMC,IAAKpC,IAC9C,6BACA,6BACA,4BAAQqC,QA5CC,WACb1B,QAAQC,IAAId,EAAqBU,QAAQgB,OACzCb,QAAQC,IAAIZ,EAAqBQ,QAAQgB,OAGzC,IAAIL,EAAclB,EAAGO,QAAQU,YAAY,CAAC,mBAAoB,aAAaC,YAAY,mBAGnFmB,EAA0BnB,EAAYC,IAAI,GAE9CkB,EAAwBtB,UAAY,WAEhC,IAAIgB,EAAOM,EAAwB5B,OAGnCsB,EAAKP,aAAec,SAASzC,EAAqBU,QAAQgB,OAC1DQ,EAAKN,aAAea,SAASvC,EAAqBQ,QAAQgB,OAG1D,IAAIrB,EAAUgB,EAAYqB,IAAIR,GAM9B7B,EAAQa,UAAY,WAChBL,QAAQC,IAAI,mBAEhBT,EAAQwB,QAAU,SAAUpB,GACxBI,QAAQC,IAAI,QAASL,EAAEE,OAAOmB,eAelC,UC5IGa,UATE,WACb,OACI,6BACI,kBAAC,IAAD,MACA,kBAAC,EAAD","file":"component---src-pages-settings-js-89348e8b4edd3b05a146.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'gatsby';\r\nimport styles from '../components/navbar.module.scss';\r\n\r\n\r\nconst navbar = () => {\r\n    return (\r\n        <header className={styles.headerContainer}>\r\n            <nav className={styles.navContainer}>\r\n                <ul className={styles.ulContainer}>\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/settings\">Settings</Link></li>\r\n                </ul>\r\n            </nav>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default navbar;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"navbar-module--headerContainer--q1OjA\",\"navContainer\":\"navbar-module--navContainer--3WxL9\",\"ulContainer\":\"navbar-module--ulContainer--ozAvH\"};","import React, {useRef, useEffect} from 'react';\r\n\r\n\r\n\r\nconst SettingsContainer = () => {\r\n\r\n    let inputMinHeartRateVal = useRef(0);\r\n    let inputMaxHeartRateVal = useRef(0);\r\n\r\n    let db = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n    \r\n\r\n   \r\n\r\n    \r\n    let request = indexedDB.open(\"heart_rate_database\", 1);\r\n\r\n    request.onupgradeneeded = e => {\r\n        db.current = e.target.result;\r\n        console.log(\"onupgradeneeded: \", db.current);\r\n        db.current.createObjectStore(\"heartRateLimits\", { keyPath: \"id\", autoIncrement: true });\r\n       \r\n    }\r\n\r\n    request.onsuccess = e => {\r\n        db.current = e.target.result;\r\n        let tx = db.current.transaction(['heartRateLimits'], 'readonly');\r\n        let store = tx.objectStore('heartRateLimits');\r\n        let req = store.get(1);\r\n\r\n        console.log(\"Hello here\");\r\n        req.onsuccess = e => {\r\n            let heartRateObject = e.target.result;\r\n            // console.log(heartRateObject);\r\n            if(heartRateObject === undefined) {\r\n                addData()\r\n            }else{\r\n                inputMinHeartRateVal.current.value = heartRateObject.minHeartRate;\r\n                inputMaxHeartRateVal.current.value = heartRateObject.maxHeartRate;\r\n            }\r\n        \r\n          \r\n        }\r\n\r\n        req.onerror = e =>{\r\n            console.log(\"Error: \", e.errorCode);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    request.onerror = e => {\r\n        db.current = e.target.result;\r\n        console.log(\"Error\", e.target.errorCode);\r\n    }\r\n\r\n    const addData = () => {\r\n        let tx = db.current.transaction(['heartRateLimits'], 'readwrite');\r\n        let store = tx.objectStore('heartRateLimits');\r\n        store.add({ minHeartRate: 136, maxHeartRate: 146 });\r\n        \r\n        let reqVals = store.get(1);\r\n\r\n        reqVals.onsuccess = (e) =>{\r\n            console.log(\"Here: \", e.target.result);\r\n            let data = e.target.result;\r\n            inputMinHeartRateVal.current.value = data.minHeartRate;\r\n            inputMaxHeartRateVal.current.value = data.maxHeartRate;\r\n        }\r\n\r\n        reqVals.onerror = e =>{\r\n            console.log(\"Error: \", e.errorCode);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    }, []);\r\n\r\n\r\n \r\n\r\n    // const saveHeartRateLimits = () => {\r\n    //     let tx = db.transaction(['heartRateLimits'], 'readonly');\r\n    //     let store = tx.objectStore('heartRateLimits');\r\n\r\n    //     let req = store.get(1);\r\n\r\n    //     req.onsuccess = function (event) {\r\n    //         let note = event.target.result;\r\n    //         if (note) {\r\n    //             console.log(note);\r\n    //         } else {\r\n    //             console.log(\"note 1 not found\")\r\n    //         }\r\n    //     }\r\n       \r\n    //     req.onerror = function (event) {\r\n    //         console.log('Error: ' + event.target.errorCode);\r\n    //     }\r\n\r\n    // }\r\n\r\n\r\n\r\n    const saveData = () => {\r\n        console.log(inputMinHeartRateVal.current.value);\r\n        console.log(inputMaxHeartRateVal.current.value);\r\n        \r\n\r\n        let objectStore = db.current.transaction(['heartRateLimits'], \"readwrite\").objectStore('heartRateLimits');\r\n\r\n        // Get the to-do list object that has this title as it's title\r\n        let objectStoreTitleRequest = objectStore.get(1);\r\n\r\n        objectStoreTitleRequest.onsuccess = function () {\r\n            // Grab the data object returned as the result\r\n            let data = objectStoreTitleRequest.result;\r\n\r\n            // Update heartRateValue\r\n            data.minHeartRate = parseInt(inputMinHeartRateVal.current.value);\r\n            data.maxHeartRate = parseInt(inputMaxHeartRateVal.current.value);\r\n\r\n            // Create another request that inserts the item back into the database\r\n            let request = objectStore.put(data);\r\n\r\n            // Log the transaction that originated this request\r\n          \r\n\r\n            // When this new request succeeds, run the displayData() function again to update the display\r\n            request.onsuccess = function () {\r\n                console.log(\"New data added\");\r\n            };\r\n            request.onerror = function (e){\r\n                console.log(\"Error\", e.target.errorCode);\r\n            };\r\n        };\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Set heart rate limit values</h2>\r\n            <p>Min HR</p>\r\n            <input type=\"number\" min={30} max={240}   ref={inputMinHeartRateVal}/>\r\n            <p>Max HR</p>\r\n            <input type=\"number\" min={30} max={240}  ref={inputMaxHeartRateVal}/>\r\n            <br />\r\n            <br />\r\n            <button onClick={saveData}>Save</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingsContainer;\r\n","import React from 'react';\r\nimport Navbar from '../components/navbar';\r\nimport SettingsContainer from '../components/settingsContainer';\r\n\r\nconst settings = () => {\r\n    return (\r\n        <div>\r\n            <Navbar/>\r\n            <SettingsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default settings;\r\n"],"sourceRoot":""}